import firs
import utils
from polar_fox import git_info

import shutil
import os

currentdir = os.curdir
from time import time

import sys

sys.path.append(os.path.join("src"))  # add to the module search path

import codecs  # used for writing files - more unicode friendly than standard open() module

from chameleon import PageTemplateLoader  # chameleon used in most template cases

# setup the places we look for templates
nut_templates = PageTemplateLoader(
    os.path.join(currentdir, "src", "gs"), format="text"
)

# get args passed by makefile
makefile_args = utils.get_makefile_args(sys)

gs_src = os.path.join(currentdir, "src", "gs")
gs_dst = os.path.join(firs.generated_files_path, "gs")

def main():
    start = time()
    print("[RENDER GS] render_gs.py")

    if os.path.exists(gs_dst):
        shutil.rmtree(gs_dst)
    if not os.path.exists(gs_dst):
        os.mkdir(gs_dst)
    hint_file = codecs.open(
        os.path.join(gs_dst, "_gs_files_here_are_generated.txt"), "w", "utf8"
    )
    hint_file.write(
        "Don't edit the gs files here.  They're generated by the build script. \n Edit the ones in src/gs instead."
    )
    hint_file.close()

    nuts = [
        # alphabetise for simplicity
        "info",
        "main",
        "version",
    ]
    for nut_name in nuts:
        nut_template = nut_templates[nut_name + ".pynut"]
        dst_file = codecs.open(os.path.join(gs_dst, nut_name + ".nut"), "w", "utf8")
        result = nut_template(
            makefile_args=makefile_args, git_info=git_info
        )
        dst_file.write(result)
        dst_file.close()

    # copy lang dir also
    shutil.copytree(os.path.join(gs_src, "lang"), os.path.join(gs_dst, "lang"))

    print(format((time() - start), ".2f") + "s")


if __name__ == "__main__":
    main()
